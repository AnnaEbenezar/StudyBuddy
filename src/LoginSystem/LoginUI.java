package LoginSystem;

import MainSystem.User;
import Utility.CustomException;
import Utility.ImagePanel;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.*;
import java.util.Locale;


public class LoginUI extends JFrame {
    final LoginDriver driver;
    CreateAccountUI createUI;
    private JPasswordField passwordField;
    private JTextField usernameField;
    private JButton cancelButton;
    private JButton loginButton;
    private JPanel LoginFrame;
    private JButton donTHaveAnButton;
    private JLabel loginErrorMessage;

    public LoginUI(LoginDriver driver) {
        super();
        this.driver = driver;
        $$$setupUI$$$();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setTitle("Login");
        this.setLayout(new BorderLayout());
        this.setContentPane(new ImagePanel("resources/img/8bitbg.jpg"));

        this.setLayout(new FlowLayout());
        this.setSize(new Dimension(1200, 800));
        createLoginUI();
//        this.setUndecorated(true);

        cancelButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                driver.quit();
            }
        });

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                driver.login();
            }
        });
        donTHaveAnButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                createAccountUI();
            }
        });

        cancelButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                super.mouseEntered(e);
                cancelButton.setOpaque(true);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                super.mouseEntered(e);
                cancelButton.setOpaque(false);
            }
        });
        loginButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                super.mouseEntered(e);
                loginButton.setOpaque(true);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                super.mouseExited(e);
                loginButton.setOpaque(false);
            }
        });
        donTHaveAnButton.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                super.mouseEntered(e);
                donTHaveAnButton.setOpaque(true);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                super.mouseExited(e);
                donTHaveAnButton.setOpaque(false);
            }
        });
    }

    public void createLoginUI() {
        if (createUI != null) {
            this.remove(createUI);
            createUI = null;
        }
        this.add(LoginFrame);
        this.setMinimumSize(new Dimension(600, 600));
        this.invalidate();
        this.validate();
        this.repaint();
    }

    private void createAccountUI() {
        this.remove(LoginFrame);
        createUI = new CreateAccountUI(this);
        this.add(createUI);
        this.setMinimumSize(new Dimension(1150, 750));
        this.invalidate();
        this.validate();
        this.repaint();
    }

    public String getUsername() {
        return usernameField.getText();
    }

    public char[] getPassword() {
        return passwordField.getPassword();
    }

    public void setLoginErrorMessage(String message) {
        this.loginErrorMessage.setText(message);
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setOpaque(false);
        LoginFrame = new JPanel();
        LoginFrame.setLayout(new GridBagLayout());
        LoginFrame.setBackground(new Color(-14737633));
        LoginFrame.setForeground(new Color(-14737633));
        LoginFrame.setOpaque(false);
        panel1.add(LoginFrame, BorderLayout.CENTER);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        panel2.setOpaque(false);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        LoginFrame.add(panel2, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel3.setOpaque(false);
        panel2.add(panel3, BorderLayout.NORTH);
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Consolas", Font.BOLD, 72, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-1447447));
        label1.setHorizontalAlignment(0);
        label1.setHorizontalTextPosition(0);
        label1.setText("Welcome.");
        label1.setVerticalTextPosition(3);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.SOUTH;
        gbc.insets = new Insets(60, 0, 0, 0);
        panel3.add(label1, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        panel4.setOpaque(false);
        panel2.add(panel4, BorderLayout.SOUTH);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        panel5.setOpaque(false);
        panel4.add(panel5, BorderLayout.CENTER);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new BorderLayout(0, 0));
        panel6.setAlignmentX(1.0f);
        panel6.setAlignmentY(1.0f);
        panel6.setMinimumSize(new Dimension(500, 23));
        panel6.setOpaque(false);
        panel6.setPreferredSize(new Dimension(0, 23));
        panel5.add(panel6, BorderLayout.CENTER);
        loginErrorMessage = new JLabel();
        loginErrorMessage.setForeground(new Color(-3504317));
        loginErrorMessage.setHorizontalAlignment(0);
        loginErrorMessage.setHorizontalTextPosition(0);
        loginErrorMessage.setMaximumSize(new Dimension(500, 23));
        loginErrorMessage.setMinimumSize(new Dimension(500, 23));
        loginErrorMessage.setPreferredSize(new Dimension(500, 23));
        loginErrorMessage.setText(" ");
        panel6.add(loginErrorMessage, BorderLayout.WEST);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel7.setOpaque(false);
        panel5.add(panel7, BorderLayout.NORTH);
        loginButton = new JButton();
        loginButton.setBackground(new Color(-12171706));
        loginButton.setBorderPainted(false);
        loginButton.setFocusPainted(false);
        Font loginButtonFont = this.$$$getFont$$$("Consolas", Font.BOLD, 20, loginButton.getFont());
        if (loginButtonFont != null) loginButton.setFont(loginButtonFont);
        loginButton.setForeground(new Color(-2829100));
        loginButton.setMaximumSize(new Dimension(150, 50));
        loginButton.setMinimumSize(new Dimension(150, 50));
        loginButton.setOpaque(false);
        loginButton.setPreferredSize(new Dimension(150, 50));
        loginButton.setText("Login");
        panel7.add(loginButton);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new BorderLayout(0, 0));
        panel8.setMinimumSize(new Dimension(50, 50));
        panel8.setOpaque(false);
        panel8.setPreferredSize(new Dimension(50, 50));
        panel7.add(panel8);
        cancelButton = new JButton();
        cancelButton.setBackground(new Color(-12171706));
        cancelButton.setBorderPainted(false);
        cancelButton.setFocusPainted(false);
        Font cancelButtonFont = this.$$$getFont$$$("Consolas", Font.BOLD, 20, cancelButton.getFont());
        if (cancelButtonFont != null) cancelButton.setFont(cancelButtonFont);
        cancelButton.setForeground(new Color(-2829100));
        cancelButton.setMaximumSize(new Dimension(150, 50));
        cancelButton.setMinimumSize(new Dimension(150, 50));
        cancelButton.setOpaque(false);
        cancelButton.setPreferredSize(new Dimension(150, 50));
        cancelButton.setText("Exit");
        panel7.add(cancelButton);
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new GridBagLayout());
        panel9.setEnabled(true);
        panel9.setOpaque(false);
        panel5.add(panel9, BorderLayout.SOUTH);
        donTHaveAnButton = new JButton();
        donTHaveAnButton.setBackground(new Color(-12171706));
        donTHaveAnButton.setBorderPainted(false);
        donTHaveAnButton.setEnabled(true);
        donTHaveAnButton.setFocusPainted(false);
        Font donTHaveAnButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 14, donTHaveAnButton.getFont());
        if (donTHaveAnButtonFont != null) donTHaveAnButton.setFont(donTHaveAnButtonFont);
        donTHaveAnButton.setForeground(new Color(-2829100));
        donTHaveAnButton.setOpaque(false);
        donTHaveAnButton.setText("Don't have an account yet?");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.ipadx = 50;
        gbc.insets = new Insets(20, 0, 0, 0);
        panel9.add(donTHaveAnButton, gbc);
        final JPanel panel10 = new JPanel();
        panel10.setLayout(new GridBagLayout());
        panel10.setOpaque(false);
        panel2.add(panel10, BorderLayout.CENTER);
        final JLabel label2 = new JLabel();
        label2.setBackground(new Color(-2829100));
        Font label2Font = this.$$$getFont$$$("Monospaced", Font.BOLD, 18, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-1447447));
        label2.setText("Username: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel10.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setBackground(new Color(-2829100));
        Font label3Font = this.$$$getFont$$$("Monospaced", Font.BOLD, 18, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setForeground(new Color(-1447447));
        label3.setText("Password: ");
        label3.setVerticalAlignment(3);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.SOUTHWEST;
        gbc.ipady = 20;
        panel10.add(label3, gbc);
        passwordField = new JPasswordField();
        passwordField.setBackground(new Color(-14737633));
        passwordField.setCaretColor(new Color(-2829100));
        Font passwordFieldFont = this.$$$getFont$$$("DialogInput", Font.BOLD, 16, passwordField.getFont());
        if (passwordFieldFont != null) passwordField.setFont(passwordFieldFont);
        passwordField.setForeground(new Color(-1447447));
        passwordField.setOpaque(false);
        passwordField.setPreferredSize(new Dimension(500, 30));
        passwordField.setSelectedTextColor(new Color(-14737633));
        passwordField.setSelectionColor(new Color(-5811170));
        passwordField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        panel10.add(passwordField, gbc);
        usernameField = new JTextField();
        usernameField.setBackground(new Color(-14737633));
        usernameField.setCaretColor(new Color(-2829100));
        Font usernameFieldFont = this.$$$getFont$$$("DialogInput", Font.BOLD, 16, usernameField.getFont());
        if (usernameFieldFont != null) usernameField.setFont(usernameFieldFont);
        usernameField.setForeground(new Color(-1447447));
        usernameField.setOpaque(false);
        usernameField.setPreferredSize(new Dimension(500, 30));
        usernameField.setSelectedTextColor(new Color(-14737633));
        usernameField.setSelectionColor(new Color(-5811170));
        usernameField.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        panel10.add(usernameField, gbc);
        final JPanel panel11 = new JPanel();
        panel11.setLayout(new BorderLayout(0, 0));
        panel11.setMinimumSize(new Dimension(50, 50));
        panel11.setOpaque(false);
        panel11.setPreferredSize(new Dimension(50, 50));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        panel10.add(panel11, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

}
